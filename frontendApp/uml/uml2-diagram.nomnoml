#.interface: fill=lightblue
#.enumeration: fill=lightgreen
#.type: fill=lightgray
[Connection<N>||]
[WorkflowEditor|+project: Project;+nodeEditor: WorkflowNodeEditor<Schemes>;+connection: ConnectionPlugin<Schemes, AreaExtra>;+id: string;+name: string;+area: AreaPlugin<Schemes, AreaExtra>;+render: AngularPlugin<Schemes, AreaExtra>;+dock: DockPlugin<Schemes>;+injector: Injector;+arrange: AutoArrangePlugin<Schemes, never>|-connectionRule(): void;-customRender(): void;+importProject(): Promise<void>;+exportProject(): Project;+saveProject(): void;-buildDockContent(): void;-serializePort(): NodePort;-serializeControl(): NodeControl;+getNodes(): Promise<Nodes\[\]>;-socketFactory(): Sockets \| Socket]
[Connection<Source,Target>]<:-[Connection<N>]
[WorkflowNodeEditor<Scheme>||]
[NodeEditor<Scheme>]<:-[WorkflowNodeEditor<Scheme>]
[<enumeration>DatasetType|Mongo;FilePath;MySQL;HuggingFace]
[<enumeration>StatusNode|Error;Incomplete;Complete;Validated]
[NodeBlock|+status: StatusNode;+statusMessage: string;+errorStacktrace: string\[\];+rebuildLocally: boolean;-statusControl: StatusControl;+width: number;+height: number;+area: AreaPlugin<Schemes, AreaExtra>|+data(): { status: StatusNode; statusMessage: string; errorStacktrace: string\[\]; };+getNodeComponent(): typeof NodeComponent;+updateStatus(): void;+abstract getRevision(): string]
[Node<Inputs,Outputs,Controls>]<:-[NodeBlock]
[NodeBlock]  -  [StatusNode]
[BaseSocket||+getSocketComponent(): any;+getConnectionComponent(): typeof ConnectionComponent]
[FlatObjectSocket||+isCompatibleWith(): boolean;+getSocketComponent(): any]
[DeepObjectSocket||+isCompatibleWith(): boolean]
[LrsObjectSocket||+isCompatibleWith(): boolean]
[SimpleFieldSocket||+isCompatibleWith(): boolean]
[Socket]<:-[BaseSocket]
[BaseSocket]<:-[FlatObjectSocket]
[BaseSocket]<:-[DeepObjectSocket]
[BaseSocket]<:-[LrsObjectSocket]
[BaseSocket]<:-[SimpleFieldSocket]
[DataFileBlock||+execute(): void]
[InputDataBlock]<:-[DataFileBlock]
[DataHuggingBlock||+execute(): void]
[InputDataBlock]<:-[DataHuggingBlock]
[DataLrsBlock||+execute(): void]
[InputDataBlock]<:-[DataLrsBlock]
[DataMongoBlock||+execute(): void]
[InputDataBlock]<:-[DataMongoBlock]
[DataMysqlBlock||+execute(): void]
[InputDataBlock]<:-[DataMysqlBlock]
[InputDataBlock||+getRevision(): string;+execute(): void;+testConnection(): void]
[NodeBlock]<:-[InputDataBlock]
[ExampleInput|+width: number;+height: number|+getRevision(): string]
[InputDataBlock]<:-[ExampleInput]
[OutputDataBlock||+getRevision(): string;+execute(): void]
[NodeBlock]<:-[OutputDataBlock]
[ExampleOutput|+width: number;+height: number|+getRevision(): string]
[OutputDataBlock]<:-[ExampleOutput]
[CustomTransformBlock||]
[TransformBlock]<:-[CustomTransformBlock]
[TransformBlock||+getRevision(): string;+execute(): void]
[NodeBlock]<:-[TransformBlock]
[ExampleTransform|+width: number;+height: number|+getRevision(): string]
[TransformBlock]<:-[ExampleTransform]